import webbrowser
from telebot import types

import psycopg2
from conf_bd import host, user, password, db_name


def first_command(bot):
    def adding_users_db(message):
        try:
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
            connection = psycopg2.connect(
                host=host,
                user=user,
                password=password,
                database=db_name
            )
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î –∞–≤—Ç–æ–º–∞—Ç–æ–º
            connection.autocommit = True
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
            with connection.cursor() as cursor:
                cursor.execute(
                    "SELECT version();"
                )

                print(f'Server version: {cursor.fetchone()}')

            with connection.cursor() as cursor:
                cursor.execute(
                    """CREATE TABLE IF NOT EXISTS users(
                        id serial PRIMARY KEY, 
                        id_user varchar(50) NOT NULL,
                        first_name varchar(50),
                        last_name varchar(50),
                        language varchar(10) NOT NULL,
                        chat_id INT NOT NULL);"""
                )
                print("[INFO] Table created successfully")

            with connection.cursor() as cursor:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏
                cursor.execute(
                    "SELECT * FROM users WHERE id_user = %s AND language = %s;",
                    (str(message.from_user.id), message.from_user.language_code)
                )

                # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Å—Ç–∞–≤–∫—É
                if cursor.fetchone() is None:
                    cursor.execute(
                        "INSERT INTO users (id_user, first_name, last_name, language, chat_id) VALUES (%s, %s, %s, %s, %s);",
                        (str(message.from_user.id), message.from_user.first_name, message.from_user.last_name,
                         message.from_user.language_code, message.chat.id)
                    )
                    print("[INFO] Data inserted successfully")
                else:
                    print("[INFO] User already exists, skipping insertion")

        except Exception as ex:
            print("[INFO] Error while working:", ex)

        finally:
            connection.close()
            print("[INFO] PostgresSQL connection closed")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–Ω–∞–¥—ã /site /website (–ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∞–π—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ)
    @bot.message_handler(commands=['site', 'website'])
    def site(message):
        webbrowser.open('https://coinmarketcap.com')

    @bot.message_handler(commands=['start'])
    def start(message):
        try:
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
            connection = psycopg2.connect(
                host=host,
                user=user,
                password=password,
                database=db_name
            )
            # –ë–ª–æ–∫ —Å —Ä–∞–±–æ—Ç–æ–π –Ω–∞–¥ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
            adding_users_db(message)

            cursor = connection.cursor()
            connection.autocommit = True
            a = message.from_user.id
            cursor.execute("SELECT language FROM users WHERE id_user = %s", (str(a),))

            language = cursor.fetchone()[0]
            cursor.close()
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å –ø–æ–º–æ—â—å—é ReplyKeyboardMarkup
            if language == 'en':
                btn1 = types.KeyboardButton('üåê Go to website CoinMarketCup')
                btn2 = types.KeyboardButton('‚ùó Help information')
                btn3 = types.KeyboardButton('üë§ My profile')
                markup.row(btn1, btn2)
                markup.row(btn3)
            elif language == 'ru':
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏(1 –ø–∞—Ä–∞–º–µ—Ç—Ä - –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ)
                btn1 = types.KeyboardButton('üåê –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç CoinMarketCup')
                btn2 = types.KeyboardButton('‚ùóÔ∏è –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
                # –î–∏–∑–∞–π–Ω –∫–Ω–æ–ø–æ–∫ –≤ –ø–ª–∞–Ω–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è, –∫–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –≤ —Å–≤–æ–µ–π —Å—Ç—Ä–æ–∫–µ
                btn3 = types.KeyboardButton('üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
                btn4 = types.KeyboardButton('‚öôÔ∏è –ú–æ–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è')
                markup.row(btn1, btn2)
                markup.row(btn3, btn4)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            file = open('./photo.png', 'rb')
            bot.send_photo(message.chat.id, file)

            if language == 'en':
                bot.send_message(message.chat.id,
                                 f'{message.from_user.first_name} {message.from_user.last_name} Welcome to CryptoTrackerBot! üìàüöÄ'
                                 '\n Your personal assistant for tracking and analyzing the cryptocurrency market.'
                                 '\nHere‚Äôs what you can do:'
                                 '\nüí∞ Check Prices: Use /price [currency] (e.g., /price BTC) to get the latest market prices.'
                                 '\nüîî Set Alerts: Use /alert [currency] [price] (e.g., /alert ETH 2000) to set custom price alerts.'
                                 '\nüìä Portfolio Tracking: Manage your holdings and view real-time updates using /portfolio.'
                                 '\nüì∞ Get News: Stay informed with the latest news by typing /news.'
                                 '\nType /help to see all available commands.'
                                 '\nLet‚Äôs keep an eye on the market together! üìäüî•', reply_markup=markup)
            elif language == 'ru':
                bot.send_message(message.chat.id,
                                 f'{message.from_user.first_name} {message.from_user.last_name} –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CryptoTrackerBot! üìàüöÄ'
                                 '\n–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.'
                                 '\n–í–æ—Ç —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å:'
                                 '\nüí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /price [–≤–∞–ª—é—Ç–∞] (–Ω–∞–ø—Ä–∏–º–µ—Ä, /price BTC), —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —Ü–µ–Ω—ã.'
                                 '\nüîî –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /alert [–≤–∞–ª—é—Ç–∞] [—Ü–µ–Ω–∞] (–Ω–∞–ø—Ä–∏–º–µ—Ä, /alert ETH 2000), —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ —Ü–µ–Ω–∞—Ö.'
                                 '\nüìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è: —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏ –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ–º–æ—â—å—é /portfolio.'
                                 '\nüì∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π: –±—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, –≤–≤–µ–¥—è /news.'
                                 '\n–í–≤–µ–¥–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.'
                                 '\n–î–∞–≤–∞–π—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ä—ã–Ω–∫–æ–º –≤–º–µ—Å—Ç–µ!  üìäüî•', reply_markup=markup)
        except Exception as ex:
            print("[INFO] Error while working:", ex)

        finally:
            connection.close()
            print("[INFO] PostgresSQL connection closed")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–Ω–∞–¥—ã /help (–í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞)
    @bot.message_handler(commands=['help'])
    def help_info(message):
        try:
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
            connection = psycopg2.connect(
                host=host,
                user=user,
                password=password,
                database=db_name
            )

            cursor = connection.cursor()
            connection.autocommit = True
            a = message.from_user.id
            cursor.execute("SELECT language FROM users WHERE id_user = %s", (str(a),))

            language = cursor.fetchone()[0]
            cursor.close()
            if language == 'en':
                bot.send_message(
                    message.chat.id,
                    "üìò <b>Help Information:</b>\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "üíπ <b>Check Prices:</b> /price [currency]\n"
                    "üîî <b>Set Alerts:</b> /alert [currency]\n"
                    "üìä <b>Portfolio Tracking:</b> /portfolio\n"
                    "üì∞ <b>Get News:</b> /news\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "‚ÑπÔ∏è <i>Use the commands above to interact with the bot.</i>",
                    parse_mode="HTML"
                )
            elif language == 'ru':
                bot.send_message(
                    message.chat.id,
                    "üìò <b>–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "üíπ <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–Ω—ã:</b> /price [–≤–∞–ª—é—Ç–∞]\n"
                    "üîî <b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è:</b> /alert [–≤–∞–ª—é—Ç–∞]\n"
                    "üìä <b>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è:</b> /portfolio\n"
                    "üì∞ <b>–ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç–∏:</b> /news\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "‚ÑπÔ∏è <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ, —á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º.</i>",
                    parse_mode="HTML"
                )

        except Exception as ex:
            print("[INFO] Error while working:", ex)

        finally:
            connection.close()
            print("[INFO] PostgresSQL connection closed")